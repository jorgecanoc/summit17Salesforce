/*
 * Salesforce DTO generated by camel-salesforce-maven-plugin
 * Generated on: Fri Apr 14 20:48:00 EDT 2017
 */
package org.apache.camel.salesforce.dto;

import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonValue;

/**
 * Salesforce Enumeration DTO for picklist Field
 */
public enum AccountHistory_FieldEnum {

    // AccountNumber
    ACCOUNTNUMBER("AccountNumber"),
    // AccountSource
    ACCOUNTSOURCE("AccountSource"),
    // Active__c
    ACTIVE__C("Active__c"),
    // AnnualRevenue
    ANNUALREVENUE("AnnualRevenue"),
    // BillingAddress
    BILLINGADDRESS("BillingAddress"),
    // BillingCity
    BILLINGCITY("BillingCity"),
    // BillingCountry
    BILLINGCOUNTRY("BillingCountry"),
    // BillingGeocodeAccuracy
    BILLINGGEOCODEACCURACY("BillingGeocodeAccuracy"),
    // BillingLatitude
    BILLINGLATITUDE("BillingLatitude"),
    // BillingLongitude
    BILLINGLONGITUDE("BillingLongitude"),
    // BillingPostalCode
    BILLINGPOSTALCODE("BillingPostalCode"),
    // BillingState
    BILLINGSTATE("BillingState"),
    // BillingStreet
    BILLINGSTREET("BillingStreet"),
    // CleanStatus
    CLEANSTATUS("CleanStatus"),
    // CustomerPriority__c
    CUSTOMERPRIORITY__C("CustomerPriority__c"),
    // DandbCompany
    DANDBCOMPANY("DandbCompany"),
    // Description
    DESCRIPTION("Description"),
    // DunsNumber
    DUNSNUMBER("DunsNumber"),
    // Fax
    FAX("Fax"),
    // Industry
    INDUSTRY("Industry"),
    // Jigsaw
    JIGSAW("Jigsaw"),
    // NaicsCode
    NAICSCODE("NaicsCode"),
    // NaicsDesc
    NAICSDESC("NaicsDesc"),
    // Name
    NAME("Name"),
    // NumberOfEmployees
    NUMBEROFEMPLOYEES("NumberOfEmployees"),
    // NumberofLocations__c
    NUMBEROFLOCATIONS__C("NumberofLocations__c"),
    // Owner
    OWNER("Owner"),
    // Ownership
    OWNERSHIP("Ownership"),
    // Parent
    PARENT("Parent"),
    // Phone
    PHONE("Phone"),
    // Rating
    RATING("Rating"),
    // SLAExpirationDate__c
    SLAEXPIRATIONDATE__C("SLAExpirationDate__c"),
    // SLASerialNumber__c
    SLASERIALNUMBER__C("SLASerialNumber__c"),
    // SLA__c
    SLA__C("SLA__c"),
    // ShippingAddress
    SHIPPINGADDRESS("ShippingAddress"),
    // ShippingCity
    SHIPPINGCITY("ShippingCity"),
    // ShippingCountry
    SHIPPINGCOUNTRY("ShippingCountry"),
    // ShippingGeocodeAccuracy
    SHIPPINGGEOCODEACCURACY("ShippingGeocodeAccuracy"),
    // ShippingLatitude
    SHIPPINGLATITUDE("ShippingLatitude"),
    // ShippingLongitude
    SHIPPINGLONGITUDE("ShippingLongitude"),
    // ShippingPostalCode
    SHIPPINGPOSTALCODE("ShippingPostalCode"),
    // ShippingState
    SHIPPINGSTATE("ShippingState"),
    // ShippingStreet
    SHIPPINGSTREET("ShippingStreet"),
    // Sic
    SIC("Sic"),
    // SicDesc
    SICDESC("SicDesc"),
    // Site
    SITE("Site"),
    // TextName
    TEXTNAME("TextName"),
    // TickerSymbol
    TICKERSYMBOL("TickerSymbol"),
    // Tradestyle
    TRADESTYLE("Tradestyle"),
    // Type
    TYPE("Type"),
    // UpsellOpportunity__c
    UPSELLOPPORTUNITY__C("UpsellOpportunity__c"),
    // Website
    WEBSITE("Website"),
    // YearStarted
    YEARSTARTED("YearStarted"),
    // accountCreatedFromLead
    ACCOUNTCREATEDFROMLEAD("accountCreatedFromLead"),
    // accountMerged
    ACCOUNTMERGED("accountMerged"),
    // accountUpdatedByLead
    ACCOUNTUPDATEDBYLEAD("accountUpdatedByLead"),
    // created
    CREATED("created"),
    // feedEvent
    FEEDEVENT("feedEvent"),
    // locked
    LOCKED("locked"),
    // ownerAccepted
    OWNERACCEPTED("ownerAccepted"),
    // ownerAssignment
    OWNERASSIGNMENT("ownerAssignment"),
    // personAccountUpdatedByLead
    PERSONACCOUNTUPDATEDBYLEAD("personAccountUpdatedByLead"),
    // unlocked
    UNLOCKED("unlocked");

    final String value;

    private AccountHistory_FieldEnum(String value) {
        this.value = value;
    }

    @JsonValue
    public String value() {
        return this.value;
    }

    @JsonCreator
    public static AccountHistory_FieldEnum fromValue(String value) {
        for (AccountHistory_FieldEnum e : AccountHistory_FieldEnum.values()) {
            if (e.value.equals(value)) {
                return e;
            }
        }
        throw new IllegalArgumentException(value);
    }

}
