/*
 * Salesforce DTO generated by camel-salesforce-maven-plugin
 * Generated on: Fri Apr 14 20:48:00 EDT 2017
 */
package org.apache.camel.salesforce.dto;

import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonValue;

/**
 * Salesforce Enumeration DTO for picklist AssetCategory
 */
public enum CustomBrandAsset_AssetCategoryEnum {

    // LargeLogoImageId
    LARGELOGOIMAGEID("LargeLogoImageId"),
    // LoginFooterText
    LOGINFOOTERTEXT("LoginFooterText"),
    // LoginLogoImageId
    LOGINLOGOIMAGEID("LoginLogoImageId"),
    // MediumLogoImageId
    MEDIUMLOGOIMAGEID("MediumLogoImageId"),
    // MotifPrimaryColor
    MOTIFPRIMARYCOLOR("MotifPrimaryColor"),
    // MotifPrimaryComplementColor
    MOTIFPRIMARYCOMPLEMENTCOLOR("MotifPrimaryComplementColor"),
    // MotifQuaternaryColor
    MOTIFQUATERNARYCOLOR("MotifQuaternaryColor"),
    // MotifQuaternaryComplementColor
    MOTIFQUATERNARYCOMPLEMENTCOLOR("MotifQuaternaryComplementColor"),
    // MotifSecondaryColor
    MOTIFSECONDARYCOLOR("MotifSecondaryColor"),
    // MotifTertiaryColor
    MOTIFTERTIARYCOLOR("MotifTertiaryColor"),
    // MotifTertiaryComplementColor
    MOTIFTERTIARYCOMPLEMENTCOLOR("MotifTertiaryComplementColor"),
    // MotifZeronaryColor
    MOTIFZERONARYCOLOR("MotifZeronaryColor"),
    // MotifZeronaryComplementColor
    MOTIFZERONARYCOMPLEMENTCOLOR("MotifZeronaryComplementColor"),
    // PageFooter
    PAGEFOOTER("PageFooter"),
    // PageHeader
    PAGEHEADER("PageHeader"),
    // SmallLogoImageId
    SMALLLOGOIMAGEID("SmallLogoImageId");

    final String value;

    private CustomBrandAsset_AssetCategoryEnum(String value) {
        this.value = value;
    }

    @JsonValue
    public String value() {
        return this.value;
    }

    @JsonCreator
    public static CustomBrandAsset_AssetCategoryEnum fromValue(String value) {
        for (CustomBrandAsset_AssetCategoryEnum e : CustomBrandAsset_AssetCategoryEnum.values()) {
            if (e.value.equals(value)) {
                return e;
            }
        }
        throw new IllegalArgumentException(value);
    }

}
